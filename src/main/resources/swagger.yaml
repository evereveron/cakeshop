swagger: '2.0'
info:
  description: Ethereum Enterprise API
  version: 1.0.0
  title: Ethereum Enterprise
  contact: {}
host: vsin8u3955.svr.us.jpmchase.net:8443
schemes:
  - https
basePath: /ethereum-enterprise/api
tags:
  - name: node
  - name: block
  - name: transaction
  - name: contract
paths:
  /block/get:
    post:
      tags:
        - block
      description: 'Retrieve a block by number, hash or tag'
      operationId: postBlock
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              number:
                description: Block number to retrieve
                type: integer
                required: false
              hash:
                description: Block hash to retrieve
                type: string
                required: false
              tag:
                description: '"earliest", "latest" or "pending"'
                type: string
                required: false
      examples:
        - name: Get block by number
          parameters:
            body: |
              {
                "number": 0
              }
        - name: Get block by hash
          parameters:
            body: >
              {

                "hash":
              "0x8564f939768d96f6fc0ba1334ed083ab6538da76f17b6d264082cb69aadc7b4c"

              }
        - name: Get latest block
          parameters:
            body: |
              {
                "tag": "latest"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Block hash identifier
                  type:
                    type: string
                    description: "resource type identifier, 'block'"
                  attributes:
                    $ref: '#/definitions/Block'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/create:
    post:
      tags:
        - contract
      description: Create a new Contract
      operationId: postContractCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
              keys:
                type: array
                description: Pubkeys that can access contract.
                items:
                  type: string
              abi:
                type: string
                description: Contract ABI
              code:
                type: string
                description: Contract source code
              code_type:
                type: string
                description: Type of code being submitted
                default: solidity
                enum:
                  - solidity
                  - binary
                  - llvm
                  - serpent
      examples:
        - name: Create SimpleStorage contract
          parameters:
            body: >
              {

                "code": "contract SimpleStorage { uint storedData; function
              set(uint x) { storedData = x; } function get() constant returns
              (uint retVal) { return storedData; } }",

                "code_type": "solidity"

              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID. Use /transaction/get to get the resulting Contract ID
                  type:
                    type: string
                    description: "resource type identifier, 'transaction_result'"
                  attributes:
                    $ref: '#/definitions/TransactionResult'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/delete:
    post:
      tags:
        - contract
      description: Delete a contract by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              id:
                type: string
                description: ID (address) of contract to delete
                example: '0x01f999deef030a0f3c55cec46e6693c06c6b01f8'
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID for delete operation
                  type:
                    type: string
                    description: "resource type identifier, 'transaction_result'"
                  attributes:
                    $ref: '#/definitions/TransactionResult'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/get:
    post:
      tags:
        - contract
      operationId: postContractGet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              id:
                type: string
                description: ID (address) of Contract to retrieve
                example: '0x01f999deef030a0f3c55cec46e6693c06c6b01f8'
      examples:
        - name: Create SimpleStorage contract
          parameters:
            body: |
              {
                "address": "<ENTER ADDRESS HERE>"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Contract ID
                  type:
                    type: string
                    description: "resource type identifier, 'contract'"
                  attributes:
                    $ref: '#/definitions/Contract'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/list:
    post:
      tags:
        - contract
      operationId: postContractList
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey. Endpoint will only return contracts visible to sender.
              key:
                type: string
                required: false
                description: Filter contracts by those visible to this key
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                description: response data
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Contract ID
                    type:
                      type: string
                      description: "resource type identifier, 'contract'"
                    attributes:
                      $ref: '#/definitions/Contract'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/migrate:
    post:
      tags:
        - contract
      description: TODO migrate a contract to a new address (redeploy the code)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
  /contract/read:
    post:
      tags:
        - contract
      description: 'Execute a non-transactional method of a contract, usually to read some data (synchronously)'
      operationId: postContractRead
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
              id:
                type: string
                required: true
                description: Contract ID (address) to read from
                example: ''
              method:
                type: string
                required: true
                description: Method name to call
              args:
                type: array
                required: false
                description: Method arguments (if needed)
                items:
                  type: object
              code:
                type: string
                required: false
                description: TODO run the given code direclty in the EVM
              code_type:
                type: string
                enum:
                  - solidity
                  - binary
                  - llvm
                  - serpent
              from:
                type: string
                required: false
                description: the address for the sending account
                default: TODO server coinbase?
              gas:
                type: integer
                required: false
                description: the amount of gas to use for the transaction
                default: 3141592
              gasPrice:
                type: integer
                required: false
                description: 'the price of gas for this transaction in wei, defaults to the mean network gas price'
              value:
                type: integer
                required: false
                description: amount of Ether to transfer to contract
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  attributes:
                    properties:
                      result:
                        type: object
                        description: return data from the read call
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /contract/transact:
    post:
      tags:
        - contract
      description: Execute a transactional method of a contract (asynchronously)
      operationId: postContractTransact
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
              id:
                type: string
                required: true
                description: Contract ID (address) to read from
                example: ''
              method:
                type: string
                required: true
                description: Method name to call
              args:
                type: array
                required: false
                description: Method arguments (if needed)
                items:
                  type: object
              code:
                type: string
                required: false
                description: TODO run the given code direclty in the EVM
              code_type:
                type: string
                enum:
                  - solidity
                  - binary
                  - llvm
                  - serpent
              from:
                type: string
                required: false
                description: the address for the sending account
                default: TODO server coinbase?
              gas:
                type: integer
                required: false
                description: the amount of gas to use for the transaction
                default: 3141592
              gasPrice:
                type: integer
                required: false
                description: 'the price of gas for this transaction in wei, defaults to the mean network gas price'
              value:
                type: integer
                required: false
                description: amount of Ether to transfer to contract
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID for the operation
                  type:
                    type: string
                    description: "resource type identifier, 'transaction_result'"
                  attributes:
                    $ref: '#/definitions/TransactionResult'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /transaction/get:
    post:
      tags:
        - transaction
      description: Retrieve a transaction by txid
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
              id:
                type: string
                required: true
                description: Transaction ID (address) to retrieve
                example: ''
      examples:
        - name: Retrieve Transaction information
          parameters:
            body: |
              {
                "address": "<ENTER ADDRESS HERE>"
              }
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Transaction ID
                  type:
                    type: string
                    description: "resource type identifier, 'transaction'"
                  attributes:
                    $ref: '#/definitions/Transaction'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /transaction/list:
    post:
      tags:
        - transaction
      description: Query for transactions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
              block_number:
                type: integer
                required: false
                description: Block number
              block_hash:
                type: string
                required: false
                description: Block hash (address)
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  description: response data
                  properties:
                    id:
                      type: string
                      description: Transaction ID
                    type:
                      type: string
                      description: "resource type identifier, 'transaction'"
                    attributes:
                      $ref: '#/definitions/Transaction'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /transaction/pending:
    post:
      tags:
        - transaction
      description: TODO Query for pending transactions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              sender:
                type: string
                required: true
                description: Request sender pubkey
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  description: response data
                  properties:
                    id:
                      type: string
                      description: Transaction ID
                    type:
                      type: string
                      description: "resource type identifier, 'transaction'"
                    attributes:
                      $ref: '#/definitions/Transaction'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/get:
    post:
      tags:
        - node
      description: Retrieve information on the node you are connecting to.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  id:
                    type: string
                    description: Node ID
                  type:
                    type: string
                    description: "resource type identifier, 'node'"
                  attributes:
                    $ref: '#/definitions/Node'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/peers:
    post:
      tags:
        - peer 
        - node
      description: Retrieve information on the peers connected to the node.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  type:
                    type: string
                    description: "resource type identifier, 'peer'"
                  attributes:
                    $ref: '#/definitions/Peer'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/start:
    post:
      tags:
        - node
      description: Start ethereum node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties: null
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the node was started
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/stop:
    post:
      tags:
        - node
      description: Stop ethereum node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties: null
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the node was stopped
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/reset:
    post:
      tags:
        - node
      description: Reset the chain to block zero
      consumes:
        - application/json
      produces:
        - application/json
      parameters: null
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: boolean
                description: Whether or not the chain was reset successfully
              errors:
                description: Only present if errors were found
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
  /node/update:
    post:
      tags:
        - node
      description: Update node configuration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              logLevel:
                type: integer
                required: false
                description: 'Set log level (0-6, 6 is most verbose)'
              networkId:
                type: integer
                required: false
                description: Network ID (any integer value)
              identity:
                type: string
                required: false
                description: Change node identity
              committingTransactions:
                type: boolean
                required: false
                description: Whether or not the node should commit incoming transactions (i.e. toggle mining)
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              data:
                type: object
                description: response data
                properties:
                  attributes:
                    $ref: '#/definitions/NodeInfo'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        4xx:
          description: Error with the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
        5xx:
          description: Error processing the request
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/APIError'
              meta:
                type: object
                description: 'Extra metadata, such as API version'
definitions:
  APIError:
    properties:
      id:
        type: string
        description: 'Error ID, if available'
      status:
        type: string
        description: HTTP status code
      code:
        type: string
        description: 'API-specific error code, if available'
      title:
        type: string
        description: Short error description
      detail:
        type: string
        description: Detailed error information
  Contract:
    properties:
      id:
        type: string
        description: Contract unique identifier. In Ethereum this is the contract address.
      author:
        type: string
        description: Pubkey of sender on original create.
      keys:
        type: array
        description: Pubkeys that can access contract.
        items:
          type: string
      abi:
        type: string
        description: Contract ABI
      code:
        type: string
        description: Contract source code
      code_type:
        type: string
        description: Type of code being submitted
        default: solidity
        enum:
          - solidity
          - binary
          - llvm
          - serpent
  TransactionResult:
    required:
      - id
    properties:
      id:
        type: string
        description: ID of the newly created transaction
  Transaction:
    properties:
      id:
        type: string
      blockHash:
        type: string
      blockNumber:
        type: integer
      transactionIndex:
        type: integer
        description: "integer of the transaction's index position in the block"
      from:
        type: string
        description: address of the sender
      to:
        type: string
        description: address of the receiver. null when it is a contract creation transaction.
      cumulativeGasUsed:
        type: integer
        description: the total amount of gas used when this transaction was executed in the block.
      gasUsed:
        type: integer
        description: the amount of gas used by this specific transaction alone.
      contractAddress:
        type: string
        description: 'the contract address created, if this transaction was a contract creation, otherwise null.'
      logs:
        type: array
        description: TODO add Log type
        items:
          type: object
  Block:
    properties:
      number:
        type: integer
        format: int32
        description: Block number
      hash:
        type: string
        description: hash of the block
      parentHash:
        type: string
        description: hash of the parent block
      nonce:
        type: string
        description: hash of the generated proof-of-work (if avail)
      sha3Uncles:
        type: string
        description: SHA3 of the uncles data in the block (32 bytes)
      logsBloom:
        type: string
        description: the bloom filter for the logs of the block (256 bytes)
      transactionsRoot:
        type: string
        description: the root of the transaction trie of the block (32 bytes)
      stateRoot:
        type: string
        description: the root of the final state trie of the block (32 bytes)
      miner:
        type: string
        description: the address of the beneficiary to whom the mining rewards were given (20 bytes)
      difficulty:
        type: integer
        format: int64
        description: integer of the difficulty of this block
      totalDifficulty:
        type: integer
        format: int64
        description: integer of the total difficulty of the chain until this block
      extraData:
        type: string
        description: 'the "extra data" field for this block'
      gasLimit:
        type: integer
        format: int32
        description: the maximum gas allowed in this block
      gasUsed:
        type: integer
        format: int32
        description: the total gas used by all transactions in this block
      timestamp:
        type: integer
        format: int32
        description: the unix timestamp for when the block was collated
      transactions:
        type: array
        description: Array of transaction hashes
        items:
          type: string
      uncles:
        type: array
        description: Array of uncle hashes
        items:
          type: string
  Node:
    properties:
      status:
        type: string
        description: 'Status of the node, it has two values "running" or "stopped"'
      id:
        type: string
        description: Unique Node ID
      nodeName:
        type: string
        description: Friendly node name (includes client and version info)
      nodeUrl:
        type: string
        description: enode URI (Includes host IP and port number)
      nodeIP:
        type: string
        description: IP address of the node
      peerCount:
        type: integer
        description: Number of peers connected to the node
      pendingTxn:
        type: integer
        description: "Number of transaction in the queue and haven't been mined"
      mining:
        type: boolean
        description: Indicates weather the miner is running or not. It has a true or false values.
      latestBlock:
        type: integer
        description: A number indicating the most recent block that has been mined.
  Peer:
      properties:
        status:
          type: string
          description: 'Status of the node, it has two values "running" or "stopped"'
        id:
          type: string
          description: Unique Node ID
        nodeName:
          type: string
          description: Friendly node name (includes client and version info)
        nodeUrl:
          type: string
          description: enode URI (Includes host IP and port number)
        nodeIP:
          type: string
          description: IP address of the node
  NodeInfo:
      properties:
          identity:
            type: string
            description: Friendly node name which gets included in the full node Name
          committingTransactions:
            type: boolean
            description: Indicates whether the node is commiting transactions or not
          networkId:
            type: integer
            description: Network identifier
          logLevel:
            type: integer
            description: 'Logging verbosity: 0-6 (0=silent, 1=error, 2=warn, 3=info, 4=core, 5=debug, 6=debug detail)'
            
